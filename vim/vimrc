" vimrc
" @author dogfooter
" @email dogfooter219@gmail.com
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"My Custom Installed Plugins
" Plugin with vim-plug
call plug#begin('~/.vim/plugged')

" basic
Plug 'scrooloose/nerdtree'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all'  }
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'jiangmiao/auto-pairs'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-surround'
Plug 'vim-scripts/tComment'
Plug 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}

"
" Web
" Plug 'mattn/emmet-vim'
" Plug 'leafgarland/typescript-vim'
" Plug 'magarcia/vim-angular2-snippets'
" Plug 'garbas/vim-snipmate'
" Plug 'honza/vim-snippets'
"
" python
" Plug 'davidhalter/jedi-vim' " for python autocomplete
" Plug 'nvie/vim-flake8'
" 
" Golang
" Plug 'fatih/vim-go'
" 
" option (not for other's PC)
" Plug 'Valloric/YouCompleteMe' 

call plug#end()
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Editor Setting

set bs=2 " for delete with backspace 
set nocompatible " only vIM
set autoindent
set cindent
set smartindent 
set number
set relativenumber 
let python_highlight_all=1
syntax on
" set background=light
set background=dark 
set ts=4
set shiftwidth=4
set expandtab 
set hlsearch
set ignorecase

" for ignore mouse
set mouse=

" start with end of work
" https://medium.com/sunhyoups-story/vim-%EC%97%90%EB%94%94%ED%84%B0-%EC%9D%B4%EC%81%98%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-5b6b8d546017#.m38vbbsy0
au BufReadPost *
\ if line("'\"") > 0 && line("'\"") <= line("$") |
\ exe "norm g`\"" |
\ endif


" current Cursor line highlight
set cursorline
hi cursorline cterm=none ctermbg=Black
autocmd InsertEnter * highlight  CursorLine cterm=none ctermbg=Black 
autocmd InsertLeave * highlight  CursorLine cterm=none ctermbg=Black 

set laststatus=2
set statusline=\ %<%l:%v\ [%P]%=%a\ %h%m%r\ %F\
set visualbell
set foldmethod=syntax  
set nofoldenable

filetype indent on
filetype plugin indent on

" If you use Youcompleteme remove comments
" let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'
" let g:ycm_confirm_extra_conf = 0
"
" let g:ycm_key_list_select_completion = ['<C-j>', '<Down>']
" let g:ycm_key_list_previous_completion = ['<C-k>', '<Up>']
" let g:ycm_autoclose_preview_window_after_completion = 1
"
" if !exists("g:ycm_semantic_triggers")
"     let g:ycm_semantic_triggers = {}
" endif
" let g:ycm_semantic_triggers['typescript'] = ['.']
" nnoremap <leader>g :YcmCompleter GoTo<CR>
" nnoremap <leader>gg :YcmCompleter GoToImprecise<CR>
" nnoremap <leader>d :YcmCompleter GoToDeclaration<CR>
" nnoremap <leader>t :YcmCompleter GetType<CR>
" nnoremap <leader>p :YcmCompleter GetParent<CR>


"" for tag list"
" let Tlist_Use_Right_Window  =1

" ctags tag
" set tags=./tags
" map <F5> :po 

"split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H> 
map <F6> <C-W><
map <F7> <C-W>>

"" my custom shortcut
map <F4> gg v G =
map <F3> :FZF<CR>
map <F2> :NERDTreeToggle<CR>

" for convinience
map ; :
